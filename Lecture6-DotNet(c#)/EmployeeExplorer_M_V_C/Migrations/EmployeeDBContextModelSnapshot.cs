// <auto-generated />
using EmployeeExplorer_M_V_C.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeExplorer_M_V_C.Migrations
{
    [DbContext(typeof(EmployeeDBContext))]
    partial class EmployeeDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeExplorer_M_V_C.Models.Clients", b =>
                {
                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClientCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientPostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("EmployeeExplorer_M_V_C.Models.EmployeeCredentials", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("EmployeeCredentials");
                });

            modelBuilder.Entity("EmployeeExplorer_M_V_C.Models.Employee_Role", b =>
                {
                    b.Property<string>("ERId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ERId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RoleId");

                    b.ToTable("EmployeeRoles");
                });

            modelBuilder.Entity("EmployeeExplorer_M_V_C.Models.Employees", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfJoin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeeExplorer_M_V_C.Models.Engineer_Project", b =>
                {
                    b.Property<string>("Engineer_projectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EngineerEmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ManagerProjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectsProjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Engineer_projectId");

                    b.HasIndex("EngineerEmployeeId");

                    b.HasIndex("ManagerProjectId");

                    b.HasIndex("ProjectsProjectId");

                    b.ToTable("EngineerProjects");
                });

            modelBuilder.Entity("EmployeeExplorer_M_V_C.Models.Login", b =>
                {
                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeCredentialsEmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginEmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SessionId");

                    b.HasIndex("EmployeeCredentialsEmployeeId");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("EmployeeExplorer_M_V_C.Models.Manager_Project", b =>
                {
                    b.Property<string>("ManagerProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ManagerEmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectsProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ManagerProjectId");

                    b.HasIndex("ManagerEmployeeId");

                    b.HasIndex("ProjectsProjectId");

                    b.ToTable("ManagerProjects");
                });

            modelBuilder.Entity("EmployeeExplorer_M_V_C.Models.Projects", b =>
                {
                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClientsClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectEndDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectStartDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.HasIndex("ClientsClientId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("EmployeeExplorer_M_V_C.Models.Role", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("EmployeeExplorer_M_V_C.Models.Employee_Role", b =>
                {
                    b.HasOne("EmployeeExplorer_M_V_C.Models.Employees", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeExplorer_M_V_C.Models.Role", "Role")
                        .WithMany("Roles")
                        .HasForeignKey("RoleId");

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EmployeeExplorer_M_V_C.Models.Engineer_Project", b =>
                {
                    b.HasOne("EmployeeExplorer_M_V_C.Models.Employees", "Engineer")
                        .WithMany()
                        .HasForeignKey("EngineerEmployeeId");

                    b.HasOne("EmployeeExplorer_M_V_C.Models.Manager_Project", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeExplorer_M_V_C.Models.Projects", "Projects")
                        .WithMany("Engineer_Projects")
                        .HasForeignKey("ProjectsProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Engineer");

                    b.Navigation("Manager");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("EmployeeExplorer_M_V_C.Models.Login", b =>
                {
                    b.HasOne("EmployeeExplorer_M_V_C.Models.EmployeeCredentials", "EmployeeCredentials")
                        .WithMany()
                        .HasForeignKey("EmployeeCredentialsEmployeeId");

                    b.Navigation("EmployeeCredentials");
                });

            modelBuilder.Entity("EmployeeExplorer_M_V_C.Models.Manager_Project", b =>
                {
                    b.HasOne("EmployeeExplorer_M_V_C.Models.Employees", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerEmployeeId");

                    b.HasOne("EmployeeExplorer_M_V_C.Models.Projects", null)
                        .WithMany("Manager_Projects")
                        .HasForeignKey("ProjectsProjectId");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("EmployeeExplorer_M_V_C.Models.Projects", b =>
                {
                    b.HasOne("EmployeeExplorer_M_V_C.Models.Clients", "Clients")
                        .WithMany("Projects")
                        .HasForeignKey("ClientsClientId");

                    b.Navigation("Clients");
                });

            modelBuilder.Entity("EmployeeExplorer_M_V_C.Models.Clients", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("EmployeeExplorer_M_V_C.Models.Projects", b =>
                {
                    b.Navigation("Engineer_Projects");

                    b.Navigation("Manager_Projects");
                });

            modelBuilder.Entity("EmployeeExplorer_M_V_C.Models.Role", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
