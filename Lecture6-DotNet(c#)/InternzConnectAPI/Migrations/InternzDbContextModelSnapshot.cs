// <auto-generated />
using System;
using InternzConnectAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InternzConnectAPI.Migrations
{
    [DbContext(typeof(InternzDbContext))]
    partial class InternzDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InternzConnectAPI.Models.EmployeeData", b =>
                {
                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Course")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EmployeeDOB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EmployeeDOJ")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("EmployeePasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("EmployeePasswordKey")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Stream")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("EmployeeData");
                });

            modelBuilder.Entity("InternzConnectAPI.Models.EmployeeRole", b =>
                {
                    b.Property<string>("ERId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ERId");

                    b.HasIndex("EmployeeId1");

                    b.HasIndex("RoleId1");

                    b.ToTable("EmployeeRoles");
                });

            modelBuilder.Entity("InternzConnectAPI.Models.LoginLogs", b =>
                {
                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmployeeId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SessionId");

                    b.HasIndex("EmployeeId1");

                    b.ToTable("LoginLogs");
                });

            modelBuilder.Entity("InternzConnectAPI.Models.Roles", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("InternzConnectAPI.Models.EmployeeRole", b =>
                {
                    b.HasOne("InternzConnectAPI.Models.EmployeeData", "EmployeeId")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("EmployeeId1");

                    b.HasOne("InternzConnectAPI.Models.Roles", "RoleId")
                        .WithMany("Employees")
                        .HasForeignKey("RoleId1");

                    b.Navigation("EmployeeId");

                    b.Navigation("RoleId");
                });

            modelBuilder.Entity("InternzConnectAPI.Models.LoginLogs", b =>
                {
                    b.HasOne("InternzConnectAPI.Models.EmployeeData", "EmployeeId")
                        .WithMany("LoginLogs")
                        .HasForeignKey("EmployeeId1");

                    b.Navigation("EmployeeId");
                });

            modelBuilder.Entity("InternzConnectAPI.Models.EmployeeData", b =>
                {
                    b.Navigation("EmployeeRoles");

                    b.Navigation("LoginLogs");
                });

            modelBuilder.Entity("InternzConnectAPI.Models.Roles", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
